{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","App.module.css"],"names":["ContactForm","state","name","number","agree","nameId","uuidv4","numberId","agreeId","handleSubmit","evt","preventDefault","contact","id","props","formSubmit","resetForm","inputChange","target","value","setState","agreeChange","checked","this","className","s","formWrapper","form","onSubmit","label","htmlFor","input","type","placeholder","pattern","title","required","onChange","checkbox","button","disabled","Component","ContactList","getContacts","deleteContact","total","length","listWrapper","list","map","item","text","onClick","Filter","filter","onFilterChange","App","contacts","obj","find","toLowerCase","alert","handleContacts","onContactsFilter","includes","filterChange","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97e2c325.chunk.js","sourcesContent":["import s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Component } from \"react\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    agree: false,\n  };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n  agreeId = uuidv4();\n\n  handleSubmit = (evt) => {\n    const { name, number } = this.state;\n    evt.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.props.formSubmit(contact);\n    this.resetForm();\n  };\n\n  inputChange = (evt) => {\n    const { name, value } = evt.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  agreeChange = (evt) => {\n    this.setState({ agree: evt.target.checked });\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\", agree: false });\n  };\n\n  render() {\n    const {\n      handleSubmit,\n      inputChange,\n      agreeChange,\n      nameId,\n      numberId,\n      agreeId,\n    } = this;\n    const { name, number, agree } = this.state;\n    return (\n      <div className={s.formWrapper}>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label} htmlFor={nameId}>\n            Name\n            <input\n              id={nameId}\n              className={s.input}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={inputChange}\n            />\n          </label>\n\n          <label className={s.label} htmlFor={numberId}>\n            Number\n            <input\n              id={numberId}\n              className={s.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"Enter number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={inputChange}\n            />\n          </label>\n          <label className={s.label} htmlFor={agreeId}>\n            <input\n              id={agreeId}\n              className={s.checkbox}\n              value={agree}\n              type=\"checkbox\"\n              name=\"agree\"\n              checked={agree}\n              onChange={agreeChange}\n            />\n            Agree\n          </label>\n\n          <button className={s.button} disabled={!agree}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  agree: PropTypes.bool,\n  nameId: PropTypes.number,\n  numberId: PropTypes.number,\n  agreeId: PropTypes.number,\n  handleSubmit: PropTypes.func,\n  formSubmit: PropTypes.func,\n  inputChange: PropTypes.func,\n  agreeChange: PropTypes.func,\n};\n\nexport default ContactForm;\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactList({ getContacts, deleteContact }) {\n  const total = getContacts.length;\n\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.list}>\n        {getContacts.map(({ name, number, id }) => (\n          <li className={s.item} key={id}>\n            <p className={s.text}>{name}:</p>\n            <p className={`${s.text} ${s.number}`}>{number}</p>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      <p className={s.total}>Total number of subscribers:{total}</p>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ filter, onFilterChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\n\nimport s from \"./App.module.css\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  formSubmit = (obj) => {\n    const { contacts } = this.state;\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === obj.name.toLowerCase()\n      )\n    ) {\n      return alert(\"This contact has already been added to the list\");\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [obj, ...contacts],\n    }));\n  };\n\n  handleContacts = () => {\n    const { filter, contacts } = this.state;\n    const onContactsFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(onContactsFilter)\n    );\n  };\n\n  filterChange = (evt) => {\n    this.setState({ filter: evt.target.value });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { deleteContact, formSubmit, filterChange } = this;\n    const { filter } = this.state;\n    const getContacts = this.handleContacts();\n    return (\n      <div className=\"s.App\">\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm formSubmit={formSubmit} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={filter} onFilterChange={filterChange} />\n        <ContactList getContacts={getContacts} deleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ruVp2\"};"],"sourceRoot":""}