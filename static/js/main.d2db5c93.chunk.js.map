{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","App.module.css"],"names":["ContactForm","state","name","number","agree","nameId","uuidv4","numberId","agreeId","handleSubmit","evt","preventDefault","contact","id","props","formSubmit","resetForm","inputChange","target","value","setState","agreeChange","checked","this","className","s","formWrapper","form","onSubmit","label","htmlFor","input","type","placeholder","pattern","title","required","onChange","checkbox","button","disabled","Component","ContactList","getContacts","deleteContact","total","length","listWrapper","list","map","item","text","onClick","Filter","filter","onFilterChange","App","contacts","obj","find","toLowerCase","alert","handleContacts","onContactsFilter","includes","filterChange","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d2db5c93.chunk.js","sourcesContent":["import s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        agree: false,\r\n    };\r\n\r\n    nameId = uuidv4();\r\n    numberId = uuidv4();\r\n    agreeId = uuidv4();\r\n\r\n    handleSubmit = evt => {\r\n        const { name, number } = this.state;\r\n        evt.preventDefault();\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n        this.props.formSubmit(contact);\r\n        this.resetForm();\r\n    };\r\n\r\n    inputChange = evt => {\r\n        const { name, value } = evt.target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    agreeChange = evt => {\r\n        this.setState({ agree: evt.target.checked });\r\n    };\r\n\r\n    resetForm = () => {\r\n        this.setState({ name: '', number: '', agree: false });\r\n    };\r\n\r\n    \r\n\r\n    render() {\r\n        const {\r\n            handleSubmit,\r\n            inputChange,\r\n            agreeChange,\r\n            nameId,\r\n            numberId,\r\n            agreeId,\r\n        } = this;\r\n        const { name, number, agree } = this.state;\r\n        return (\r\n            <div className={s.formWrapper}>\r\n                <form className={s.form} onSubmit={handleSubmit}>\r\n                    <label className={s.label} htmlFor={nameId}>\r\n                        Name\r\n                        <input\r\n                            id={nameId}\r\n                            className={s.input}\r\n                            value={name}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            onChange={inputChange}\r\n                        />\r\n                    </label>\r\n\r\n                    <label className={s.label} htmlFor={numberId}>\r\n                        Number\r\n                        <input\r\n                            id={numberId}\r\n                            className={s.input}\r\n                            type=\"tel\"\r\n                            value={number}\r\n                            name=\"number\"\r\n                            placeholder=\"Enter number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            onChange={inputChange}\r\n                        />\r\n                    </label>\r\n                    <label className={s.label} htmlFor={agreeId}>\r\n                        <input\r\n                            id={agreeId}\r\n                            className={s.checkbox}\r\n                            value={agree}\r\n                            type=\"checkbox\"\r\n                            name=\"agree\"\r\n                            checked={agree}\r\n                            onChange={agreeChange}\r\n                        />\r\n                        Agree\r\n                    </label>\r\n\r\n                    <button className={s.button} disabled={!agree}>\r\n                        Add contact\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n    agree: PropTypes.bool,\r\n    nameId: PropTypes.number,\r\n    numberId: PropTypes.number,\r\n    agreeId: PropTypes.number,\r\n    handleSubmit: PropTypes.func,\r\n    formSubmit: PropTypes.func,\r\n    inputChange: PropTypes.func,\r\n    agreeChange: PropTypes.func,\r\n    \r\n};\r\n\r\nexport default ContactForm;","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactList({ getContacts, deleteContact }) {\r\n    const total = getContacts.length;\r\n\r\n    return (\r\n        <div className={s.listWrapper}>\r\n            <ul className={s.list}>\r\n                {getContacts.map(({ name, number, id }) => (\r\n                    <li className={s.item} key={id}>\r\n                        <p className={s.text}>{name}:</p>\r\n                        <p className={`${s.text} ${s.number}`}>{number}</p>\r\n                        <button\r\n                            className={s.button}\r\n                            type=\"button\"\r\n                            onClick={() => deleteContact(id)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <p className={s.total}>\r\n                Total number of subscribers:{total}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    getContacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n            id: PropTypes.string,\r\n        }),\r\n    ),\r\n\r\n    deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ filter, onFilterChange }) {\r\n    return (\r\n        \r\n            <label className={s.label}>\r\n                Find contacts by name\r\n                <input\r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={filter}\r\n                    onChange={onFilterChange}\r\n                />\r\n            </label>\r\n        \r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    onFilterChange: PropTypes.func,\r\n    filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;","import { Component } from \"react\";\n\nimport s from './App.module.css';\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n};\nformSubmit = (obj) => {\n  const {contacts} = this.state;\n  if (\n      contacts.find(\n          contact =>\n              contact.name.toLowerCase() === obj.name.toLowerCase(),\n      )\n  ) {\n      return alert('This contact has already been added to the list');\n  }\n\n  this.setState(({ contacts }) => ({\n      contacts: [obj, ...contacts],\n  }));\n};\n\nhandleContacts = () => {\n  const { filter, contacts } = this.state;\n  const onContactsFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(onContactsFilter),\n  );\n};\n\nfilterChange = evt => {\n  this.setState({ filter: evt.target.value });\n};\n\n\n\ndeleteContact = contactId => {\n  this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n          contact => contact.id !== contactId,\n      ),\n  }));\n};\n\nrender () {\n  const { deleteContact, formSubmit, filterChange } = this;\n  const { filter } = this.state;\n  const getContacts = this.handleContacts();\n  return (\n  <div className=\"s.App\">\n    <h1 className={s.title}>Phonebook</h1>\n                <ContactForm formSubmit={formSubmit} />\n                <h2 className={s.title}>Contacts</h2>\n                <Filter filter={filter} onFilterChange={filterChange} />\n                <ContactList\n                    getContacts={getContacts}\n                    deleteContact={deleteContact}\n                />\n    </div>\n    )\n}\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ruVp2\"};"],"sourceRoot":""}